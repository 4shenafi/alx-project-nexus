# Generated by Django 4.2.7 on 2025-09-23 13:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                ("slug", models.SlugField(max_length=120, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Brand logo",
                        null=True,
                        upload_to="brands/",
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "is_active",
                    models.BooleanField(db_index=True, default=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Brand",
                "verbose_name_plural": "Brands",
                "db_table": "brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                ("slug", models.SlugField(max_length=120, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Category image",
                        null=True,
                        upload_to="categories/",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(db_index=True, default=True),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "db_table": "categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("slug", models.SlugField(max_length=300, unique=True)),
                ("description", models.TextField()),
                (
                    "short_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "sku",
                    models.CharField(
                        db_index=True,
                        help_text="Stock Keeping Unit",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("discontinued", "Discontinued"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(db_index=True, default=False),
                ),
                (
                    "is_digital",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a digital product",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in kg",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "dimensions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Product dimensions (length, width, height)",
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                (
                    "seo_description",
                    models.CharField(blank=True, max_length=160, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                ("slug", models.SlugField(max_length=120, unique=True)),
                (
                    "attribute_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("number", "Number"),
                            ("select", "Select"),
                            ("multiselect", "Multi-Select"),
                            ("boolean", "Boolean"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("is_required", models.BooleanField(default=False)),
                (
                    "is_variant",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this attribute creates product variants",
                    ),
                ),
                (
                    "is_filterable",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this attribute can be used for filtering",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Product Attribute",
                "verbose_name_plural": "Product Attributes",
                "db_table": "product_attributes",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(db_index=True, max_length=255)),
                (
                    "display_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Product Attribute Value",
                "verbose_name_plural": "Product Attribute Values",
                "db_table": "product_attribute_values",
                "ordering": ["sort_order", "value"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(help_text="Product image", upload_to="products/"),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for accessibility",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Whether this is the primary image",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "db_table": "product_images",
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        db_index=True,
                        help_text="Variant SKU",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "compare_at_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price for comparison",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost price for profit calculation",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        db_index=True,
                        default=0,
                        help_text="Available stock quantity",
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=5, help_text="Threshold for low stock alerts"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Variant weight in kg",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(db_index=True, default=True),
                ),
                (
                    "is_digital",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this variant is digital",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Variant",
                "verbose_name_plural": "Product Variants",
                "db_table": "product_variants",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("slug", models.SlugField(max_length=60, unique=True)),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Hex color code for the tag",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "db_table": "tags",
                "ordering": ["name"],
                "indexes": [models.Index(fields=["slug"], name="tags_slug_c72f9b_idx")],
            },
        ),
        migrations.CreateModel(
            name="ProductVariantAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productattribute",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productattributevalue",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Variant Attribute",
                "verbose_name_plural": "Product Variant Attributes",
                "db_table": "product_variant_attributes",
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("comment", models.TextField()),
                (
                    "is_verified_purchase",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this review is from a verified purchase",
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Whether this review is approved for display",
                    ),
                ),
                ("helpful_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Review",
                "verbose_name_plural": "Product Reviews",
                "db_table": "product_reviews",
                "ordering": ["-created_at"],
            },
        ),
    ]
